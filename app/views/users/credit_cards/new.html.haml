.row.new-payment
  .col-md-9.col-sm-12.col-xs-12
    .equal-height
      .panel.job-details
        .panel-heading.panel-heading-border.clearfix
          %h4.panel-title #{@job.title}
        .panel-body
          .row
            .profile-border.clickable{ data: { toggle: 'modal', target: "#js-mechanic-#{@mechanic.id}" }, role: 'button' }
              = render 'shared/mechanic/avatar', mechanic: @mechanic
            %div
              %table
                %tr
                  %th Mechanic:
                  %td
                    %strong.gray= @mechanic.full_name
                    - if @mechanic.years_as_a_mechanic
                      %br
                      %span #{pluralize @mechanic.years_as_a_mechanic, 'year'} of experience
                    .reviews-row
                      .rating.text-left
                        = rating_stars(@mechanic.rating)
                %tr
                  %th Date:
                  %td
                    %span.lazure #{@scheduled_at.to_s(:date_time)}
                %tr
                  %th Car:
                  %td
                    %span.gray= @job.car.display_title
                %tr
                  %th Location:
                  %td
                    %span= @job.location.full_address
          = render "shared/mechanic/modal", mechanic: @mechanic
      .divider
      .panel.price-breakdown
        .panel-heading.panel-heading-border.clearfix
          %h4.panel-title Price Breakdown
        .panel-body
          %table
            %tbody
              - job_breakdown(@job).each do |row|
                %tr
                  %th= row[:title]
                  %td= row[:value]
              %tr.tr-divider
                %td{ colspan: 2 }
              - job_totals(@job).each do |row|
                %tr
                  %th= row[:title]
                  %td= row[:value]
          .payment-notice
            You pay $0 to secure this booking.
            %br
            %strong You pay after the job is done.
          - unless @job.discount.present?
            .promo-code
              = simple_form_for :discount, url: users_job_discount_path(@job) do |f|
                = f.input :code, label: false, placeholder: 'Enter promo code', wrapper: false
                = f.submit 'Apply', class: 'btn btn-primary btn-sm'

    .clearfix

    .panel.panel-default.panel-rounded
      .panel-heading
        %h4.panel-title Payment Process
      .panel-body
        - if @error
          .alert.alert-danger
            %p.text-center
              %b An error occured verifying your credit card
        - else
          .alert.alert-info
            %p.text-center
              Providing a credit card holds your spot with the mechanic, much like reserving a room at a hotel.
              %br
              %b No money will be billed until you confirm your quote and after your job is complete.
        .col-md-5.col-md-offset-3
          .col-md-12.text-center
            = image_tag asset_url('payment-img.jpg'), class: 'payment-img img-responsive'
          = simple_form_for [:users, @job, @job.build_credit_card], url: users_job_credit_card_path(@job) do
            -#
              %input.hidden.add-promo#add-promo{type: 'checkbox'}
              %label.add-promo-label.lazure{for: 'add-promo'} Add Promo Code
              .form-group.promo-group
                %label Enter code (if applicable) then click update:
                .col-md-8.col-sm-8.col-xs-12
                  %input.form-control.vertical-align{type: 'text'}
                = link_to 'Update', '#', class: 'btn btn-default col-md-4 col-sm-4 col-xs-12'
            .form-group
              %label Name on the credit card
              %input.col-md-12.form-control{type: 'text', autocomplete: 'off', 'data-encrypted-name' => 'credit_card[cardholder_name]'}
              %span.help-block.hide Cardholder name is invalid
            .form-group
              %label Credit Card Number
              %input.col-md-12.form-control{type: 'text', autocomplete: 'off', 'data-encrypted-name' => 'credit_card[number]'}
              %span.help-block.hide Card number name is invalid
            .form-group.month-year
              %label Expiration Date
              = select_tag nil, options_for_select(1..12), class: 'form-control', 'data-encrypted-name' => 'credit_card[expiration_month]'
              = select_tag false, options_for_select(Date.today.year.upto(Date.today.year + 20)), class: 'form-control', 'data-encrypted-name' => 'credit_card[expiration_year]'
            .form-group
              %label CCV
              %input.col-md-12.form-control{type: 'text', autocomplete: 'off', 'data-encrypted-name' => 'credit_card[cvv]'}
              %span.help-block.hide CVV is invalid
            %label
              I have read and agreed to the
              = link_to 'terms of use', page_path(:terms_of_use), target: '_blank'
            %div
              %button.btn.btn-info.btn-book-mechanic{type: 'submit'} Book #{@mechanic.first_name} for #{@scheduled_at.to_s(:date_abr)}
            %small Your credit card is not billed until the work is done!

= javascript_include_tag 'https://js.braintreegateway.com/v1/braintree.js'

:coffee
  inputs = $('#new_credit_card :text')

  validate = ->
    results = (validateInput(input) for input in inputs)
    return if false in results then false else true

  validateInput = (input) ->
    value = $(input).val()
    $(input).parent().removeClass('has-error').find('.help-block').addClass('hide')

    switch $(input).attr('data-encrypted-name')
      when 'credit_card[cardholder_name]'
        return invalidateInput(input) if value == ''
      when 'credit_card[number]'
        return invalidateInput(input) unless /^\d{16}$/.test value.replace(/\ /g, '')
      when 'credit_card[cvv]'
        return invalidateInput(input) unless /^\d{3}$/.test value
    true

  invalidateInput = (input) ->
    $(input).parent().addClass('has-error').find('.help-block').removeClass('hide')
    false

  inputs.blur (e) ->
    validateInput(this)

  $('#new_credit_card').submit (f) ->
    validate()

  braintree = Braintree.create('MIIBCgKCAQEA0iDZGZeMW3w4c1dljlEghWBskAEQUiwnzi5ilc4Rk6oLtV0HKMJEm1ARXnopAYnaQh7FIOotLXcsJGAZf1Dxhe/lR6dJmSCFh8BLBLjNs1k1jUhhnZJHsh+SNhBjqJ/gmqbnrgY0mEvSSfVOcPN4jiGesMTijAeWaREM5t7SmivtdmMQ3hqYS41cMWeGYXi74B/uObS9uFq5A6DQUaIjfFkpEi504f2njPY9L76ZsRqKr5UZwcR6BLhUpvAHeJvvJs0NkX2TGdzsS1KWNLYN1mSmW1ja7xGDXb53dvXFdkfes2eB8tzAcjYojv+9a8SfgGC4/9kMdR21/axEhG7NTwIDAQAB')
  braintree.onSubmitEncryptForm('new_credit_card')
